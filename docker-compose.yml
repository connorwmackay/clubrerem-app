version: "3"
services:
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    command: npm start
    volumes:
      - ./server:/usr/src/app/server
    depends_on:
      - postgres
    ports:
      - "4001:4001"
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    command: npm start
    volumes:
      - ./client:/usr/src/app/client
    depends_on:
      - backend
    ports:
      - "3000:3000"
  postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/data/postgres
    logging:
      driver: "none"
    ports:
      - '5438:5432'
    volumes:
      - postgres:/data/postgres
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    restart: always
    logging:
        driver: "none"
    depends_on: 
      - postgres
    environment:
        PGADMIN_DEFAULT_EMAIL: admin@admin.com
        PGADMIN_DEFAULT_PASSWORD: root
        GUNICORN_ACCESS_LOGFILE: "/tmp/log.txt"
    ports:
        - "5050:80"
  api_test:
    build:
      context: ./api_test
      dockerfile: Dockerfile
    command: npm test
    volumes:
      - ./api_test:/usr/src/app/api_test
    depends_on:
      - backend
    ports:
      - "4002:4002"
volumes:
  server:
  postgres:
  api_test:
  client: